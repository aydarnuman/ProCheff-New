name: deploy
on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      PROJECT_ID: degsan-site
      REGION: us-west1
      SERVICE: procheff
      REPO: procheff

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install & Build
        run: |
          npm ci
          npm run type-check
          npm run build

      # GCP Auth temporarily disabled - requires manual deployment
      # - name: Auth to Google Cloud
      #   uses: google-github-actions/auth@v2
      #   with:
      #     workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
      #     service_account: ${{ secrets.GCP_DEPLOY_SA }}

      - name: Build Test Complete
        run: |
          echo "âœ… Build successful!"
          echo "ðŸ“¦ TypeScript check passed"
          echo "ðŸŽ¯ Ready for manual deployment"

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker auth
        run: |
          gcloud auth configure-docker ${REGION}-docker.pkg.dev --quiet

      - name: Build & Push Image
        run: |
          docker build -f docker/Dockerfile -t $IMAGE .
          docker push $IMAGE

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE \
            --project $PROJECT_ID \
            --region $REGION \
            --image $IMAGE \
            --platform managed \
            --allow-unauthenticated \
            --concurrency 10 \
            --cpu 2 \
            --memory 1Gi \
            --port 8080 \
            --min-instances 1 \
            --max-instances 10 \
            --set-env-vars "GIT_SHA=${{ github.sha }}" \
            --set-secrets "ANTHROPIC_API_KEY=ANTHROPIC_API_KEY:3" \
            --set-secrets "OPENAI_API_KEY=OPENAI_API_KEY:1" \
            --set-secrets "NEXTAUTH_SECRET=NEXTAUTH_SECRET:1" \
            --set-secrets "DB_URL_SECRET=DB_URL_SECRET:1"

      - name: Smoke - Health
        run: |
          URL=$(gcloud run services describe $SERVICE --project $PROJECT_ID --region $REGION --format='value(status.url)')
          curl -fsSL "$URL/api/health" | jq .
